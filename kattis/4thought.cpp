#include <bits/stdc++.h>
using namespace std;

int main() {
	unordered_map<int, string> saver;
	saver[4 + 4 + 4 + 4] = "4 + 4 + 4 + 4";
	saver[4 + 4 + 4 - 4] = "4 + 4 + 4 - 4";
	saver[4 + 4 + 4 * 4] = "4 + 4 + 4 * 4";
	saver[4 + 4 + 4 / 4] = "4 + 4 + 4 / 4";
	saver[4 + 4 - 4 + 4] = "4 + 4 - 4 + 4";
	saver[4 + 4 - 4 - 4] = "4 + 4 - 4 - 4";
	saver[4 + 4 - 4 * 4] = "4 + 4 - 4 * 4";
	saver[4 + 4 - 4 / 4] = "4 + 4 - 4 / 4";
	saver[4 + 4 * 4 + 4] = "4 + 4 * 4 + 4";
	saver[4 + 4 * 4 - 4] = "4 + 4 * 4 - 4";
	saver[4 + 4 * 4 * 4] = "4 + 4 * 4 * 4";
	saver[4 + 4 * 4 / 4] = "4 + 4 * 4 / 4";
	saver[4 + 4 / 4 + 4] = "4 + 4 / 4 + 4";
	saver[4 + 4 / 4 - 4] = "4 + 4 / 4 - 4";
	saver[4 + 4 / 4 * 4] = "4 + 4 / 4 * 4";
	saver[4 + 4 / 4 / 4] = "4 + 4 / 4 / 4";
	saver[4 / 4 + 4 + 4] = "4 / 4 + 4 + 4";
	saver[4 / 4 + 4 - 4] = "4 / 4 + 4 - 4";
	saver[4 / 4 + 4 * 4] = "4 / 4 + 4 * 4";
	saver[4 / 4 + 4 / 4] = "4 / 4 + 4 / 4";
	saver[4 / 4 - 4 + 4] = "4 / 4 - 4 + 4";
	saver[4 / 4 - 4 - 4] = "4 / 4 - 4 - 4";
	saver[4 / 4 - 4 * 4] = "4 / 4 - 4 * 4";
	saver[4 / 4 - 4 / 4] = "4 / 4 - 4 / 4";
	saver[4 / 4 * 4 + 4] = "4 / 4 * 4 + 4";
	saver[4 / 4 * 4 - 4] = "4 / 4 * 4 - 4";
	saver[4 / 4 * 4 * 4] = "4 / 4 * 4 * 4";
	saver[4 / 4 * 4 / 4] = "4 / 4 * 4 / 4";
	saver[4 / 4 / 4 + 4] = "4 / 4 / 4 + 4";
	saver[4 / 4 / 4 - 4] = "4 / 4 / 4 - 4";
	saver[4 / 4 / 4 * 4] = "4 / 4 / 4 * 4";
	saver[4 / 4 / 4 / 4] = "4 / 4 / 4 / 4";
	saver[4 - 4 + 4 + 4] = "4 - 4 + 4 + 4";
	saver[4 - 4 + 4 - 4] = "4 - 4 + 4 - 4";
	saver[4 - 4 + 4 * 4] = "4 - 4 + 4 * 4";
	saver[4 - 4 + 4 / 4] = "4 - 4 + 4 / 4";
	saver[4 - 4 - 4 + 4] = "4 - 4 - 4 + 4";
	saver[4 - 4 - 4 - 4] = "4 - 4 - 4 - 4";
	saver[4 - 4 - 4 * 4] = "4 - 4 - 4 * 4";
	saver[4 - 4 - 4 / 4] = "4 - 4 - 4 / 4";
	saver[4 - 4 * 4 + 4] = "4 - 4 * 4 + 4";
	saver[4 - 4 * 4 - 4] = "4 - 4 * 4 - 4";
	saver[4 - 4 * 4 * 4] = "4 - 4 * 4 * 4";
	saver[4 - 4 * 4 / 4] = "4 - 4 * 4 / 4";
	saver[4 - 4 / 4 + 4] = "4 - 4 / 4 + 4";
	saver[4 - 4 / 4 - 4] = "4 - 4 / 4 - 4";
	saver[4 - 4 / 4 * 4] = "4 - 4 / 4 * 4";
	saver[4 - 4 / 4 / 4] = "4 - 4 / 4 / 4";
	saver[4 * 4 + 4 + 4] = "4 * 4 + 4 + 4";
	saver[4 * 4 + 4 - 4] = "4 * 4 + 4 - 4";
	saver[4 * 4 + 4 * 4] = "4 * 4 + 4 * 4";
	saver[4 * 4 + 4 / 4] = "4 * 4 + 4 / 4";
	saver[4 * 4 - 4 + 4] = "4 * 4 - 4 + 4";
	saver[4 * 4 - 4 - 4] = "4 * 4 - 4 - 4";
	saver[4 * 4 - 4 * 4] = "4 * 4 - 4 * 4";
	saver[4 * 4 - 4 / 4] = "4 * 4 - 4 / 4";
	saver[4 * 4 * 4 + 4] = "4 * 4 * 4 + 4";
	saver[4 * 4 * 4 - 4] = "4 * 4 * 4 - 4";
	saver[4 * 4 * 4 * 4] = "4 * 4 * 4 * 4";
	saver[4 * 4 * 4 / 4] = "4 * 4 * 4 / 4";
	saver[4 * 4 / 4 + 4] = "4 * 4 / 4 + 4";
	saver[4 * 4 / 4 - 4] = "4 * 4 / 4 - 4";
	saver[4 * 4 / 4 * 4] = "4 * 4 / 4 * 4";
	saver[4 * 4 / 4 / 4] = "4 * 4 / 4 / 4";
	int testcase;
	cin >> testcase;
	for (int i = 0; i < testcase; i++) {
		int n;
		cin >> n;
		if (saver.find(n) == saver.end()) {
			cout << "no solution" << endl;
		}
		else {
			cout << saver[n] << " = " << n << endl;
		}
	}
}